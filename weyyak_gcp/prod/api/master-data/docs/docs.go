// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/age-ratings/{rating_id}": {
            "get": {
                "description": "get list of all Age Ratings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Age Ratings"
                ],
                "summary": "Show a list of all Age Ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rating Id",
                        "name": "rating_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ageRatings.AgeRatings"
                            }
                        }
                    }
                }
            }
        },
        "/api/content/digitalrights/types": {
            "get": {
                "description": "get list of all digital types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Digital"
                ],
                "summary": "Show a list of all digital types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/digitalRights.DigitalRights"
                            }
                        }
                    }
                }
            }
        },
        "/api/content/displaystatuses": {
            "get": {
                "description": "get list of all display status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Digital"
                ],
                "summary": "Show a list of all display status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/digitalRights.DisplayStatus"
                            }
                        }
                    }
                }
            }
        },
        "/api/contenttypes/multitier": {
            "get": {
                "description": "get list of all multi tier's data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Types"
                ],
                "summary": "Show a list of all multi tier's data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contentType.ContentMultiTier"
                            }
                        }
                    }
                }
            }
        },
        "/api/contenttypes/onetier": {
            "get": {
                "description": "get list of all one tier's data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Types"
                ],
                "summary": "Show a list of all one tier's data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contentType.ContentOneTier"
                            }
                        }
                    }
                }
            }
        },
        "/api/genre/{genre_id}": {
            "get": {
                "description": "get list of all genre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Show a list of all genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre Id",
                        "name": "genre_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/genre.Genre"
                            }
                        }
                    }
                }
            }
        },
        "/api/languages/ar/dialects": {
            "get": {
                "description": "get list of all Languages dialects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Language"
                ],
                "summary": "Show a list of all Languages dialects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/language.LanguageDialects"
                            }
                        }
                    }
                }
            }
        },
        "/api/languages/dubbing": {
            "get": {
                "description": "get list of all Languages dubbing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Language"
                ],
                "summary": "Show a list of all Languages dubbing",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/language.LanguageDubbing"
                            }
                        }
                    }
                }
            }
        },
        "/api/languages/original": {
            "get": {
                "description": "get list of all Languages original",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Language"
                ],
                "summary": "Show a list of all Languages original",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/language.LanguageOriginal"
                            }
                        }
                    }
                }
            }
        },
        "/api/languages/origintypes": {
            "get": {
                "description": "get list of all Languages  origin types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Language"
                ],
                "summary": "Show a list of all Languages  origin types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/language.LanguageOriginTypes"
                            }
                        }
                    }
                }
            }
        },
        "/api/languages/subtitling": {
            "get": {
                "description": "get list of all Languages subtitle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Language"
                ],
                "summary": "Show a list of all Languages subtitle",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/language.LanguageSubtitle"
                            }
                        }
                    }
                }
            }
        },
        "/api/{langcode}/countries": {
            "get": {
                "description": "get list of all country's",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Show a list of all country's",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/country.Country"
                            }
                        }
                    }
                }
            }
        },
        "/config": {
            "get": {
                "description": "Get application config details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTT"
                ],
                "summary": "Get application config details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/v1/{lang}/contenttype": {
            "get": {
                "description": "Get topmenu details list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTT"
                ],
                "summary": "Get topmenu details list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language Code",
                        "name": "lang",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device",
                        "name": "device",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
